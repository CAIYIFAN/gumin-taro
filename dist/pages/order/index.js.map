{"version":3,"sources":["webpack:///._src_pages_order_index.tsx","webpack:///._src_pages_order_index.less","webpack:///./src/pages/order/index.tsx?7a00"],"names":["useState","num","activeTabIndex","activeSwiperIndex","currentState","historyState","historyOrder","currentOrder","subscript","data","setData","switchTap","value","doListChange","console","gotoOrder","gotoDetail","finishOrder","orderAgain","Item","item","url","index","sub","key"],"mappings":"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","file":"pages/order/index.js","sourcesContent":["import React, { useState } from 'react';\nimport { View, Swiper, SwiperItem, ScrollView, Image, Text, Button } from '@tarojs/components'\nimport './index.less';\n\nfunction Order() {\n  const [data, setData] = useState({\n    num: 0,\n    activeTabIndex: 0,\n    activeSwiperIndex: 0,\n    currentState: false,\n    historyState: false,\n    historyOrder: [],\n    currentOrder: [],\n    subscript: [0, 1, 2]\n  })\n\n  const switchTap = (value) => () => {\n    setData({...data, ...{activeTabIndex: value}})\n  }\n\n  const doListChange = () => {console.log('doListChange')}\n\n  const gotoOrder = () => {console.log('gotoOrder')}\n\n  const gotoDetail = (value) => () => {console.log('gotoDetail')}\n\n  const finishOrder = (value) => () =>  {console.log('finishOrder')}\n\n  const orderAgain = () => {console.log('orderAgain')}\n\n  const Item = (item): ReactNode => {\n    return \n      item.avatarUrl.length <= 3 ? (\n        item.map((item, index) => (\n          <Image className=\"orderPic\" key={index}  src={item.avatarUrl.url} />\n        ))\n      ) : (\n        item.map((item, index) => (\n          <View key={index}>\n            <Image className=\"orderPic\" key={index}  src={item.avatarUrl.sub} />\n            <Image src=\"https://static.gumingnc.com/guming-wechat/prod/files/images/ellipsis.png\" className=\"ellipsis\"></Image>\n          </View>\n        ))\n      )\n  }\n\n  return (\n    <View className=\"page page_v\">\n      <View className=\"navigeterbar\">\n        <View className=\"bar_title\">\n          订单列表\n        </View>\n      </View>\n      <View className=\"GM_tabs\">\n        <View \n          className={`GM_tabs__item ${data.activeTabIndex == 0? \"GM_tabs__item_on\" : \"\"}`}\n          onClick={switchTap(0)}\n          >\n          当前订单\n        </View>\n        <View \n          className={`GM_tabs__item ${data.activeTabIndex == 1? \"GM_tabs__item_on\" : \"\"}`}\n          onClick={switchTap(1)}\n          >\n          历史订单\n        </View>\n      </View>\n      <View className=\"GM_swiper_list\">\n        <Swiper \n          current={data.activeSwiperIndex}\n          className=\"GM_swiper_list_swiper\"\n          onChange={doListChange}\n          >\n          <SwiperItem className=\"GM_swiper_list_item\">\n            <ScrollView scroll-y >\n              {\n                !data.currentState && (\n                  <View className=\"state_none\">\n                    <Image src=\"../../assets/GIF/order_bg.gif\" className=\"order_bg\" />\n                    <Text className=\"desc\">您还没有下单，来一杯吧~</Text>\n                    <Button onClick={gotoOrder}>来一杯</Button>\n                  </View>\n                )\n              }\n              {\n                data.currentState && (\n                    <View className=\"bgc\">\n                      <View className=\"state_hot\">\n                        {\n                          data.currentOrder.map((item: any, key) => (\n                            <View className=\"order\" key={key}>\n                              <View className=\"order_hd\">\n                                <Image src=\"../../assets/icons/shop.png\"></Image>\n                                <View className=\"shop\">{item.shop}</View>\n                                <View className=\"orderWay\">{item.orderWay}</View>\n                                <View className=\"fill\"></View>\n                                <View className=\"state\">{item.state}</View>\n                              </View>\n                            <View className=\"time\">{item.time}</View>\n                            <View className=\"order_bd\" onClick={gotoDetail(item.id)}>\n                            <View className=\"bd_pic\">\n                              {Item(item)}\n                            </View>\n                            <View className=\"sum\">\n                              <View className=\"price\">￥{item.sumPrice}</View>\n                              <View className=\"num\">共{item.orderNum}杯</View>\n                            </View>\n                        </View>\n                        <View className=\"order_ft\">\n                          <Button className=\"again\" onClick={finishOrder(item.id)}>确认收到</Button>\n                        </View>\n                        </View>\n                          ))\n                        }\n                      </View>\n                    </View>\n                )\n              }\n            </ScrollView>\n          </SwiperItem>\n          <SwiperItem className=\"GM_swiper_list_item\">\n            <ScrollView scroll-y>\n            {\n              !data.historyState ? (\n                <View className=\"state_none\">\n                  <Image src=\"../../assets/GIF/order_bg.gif\" className=\"order_bg\" />\n                  <Text className=\"desc\">您还没有下单，来一杯吧~</Text>\n                  <Button onClick={gotoOrder}>来一杯</Button>\n                </View>\n              ) : (\n                <View className=\"state_hot\">\n                  <View className=\"bgc\">\n                    <View className=\"state_hot\">\n                      {\n                        data.historyOrder.map((item: any, index) => (\n                          <View \n                            className=\"order\" \n                            key={index}\n                            onClick={gotoDetail(item.id)}\n                          >\n                            <View className=\"order_hd\">\n                              <Image src=\"../../assets/icons/shop.png\" />\n                              <View className=\"shop\">{item.shop}</View>\n                              <View className=\"orderWay\">{item.orderWay}</View>\n                              <View className=\"fill\"></View>\n                              <View className=\"state\">{item.state}</View>\n                            </View>\n                            <View className=\"time\">{item.time}</View>\n                            <View className=\"order_bd\">\n                            <View className=\"bd_pic\">\n                              {\n                                  item.avatarUrl.length <= 3 ? (\n                                    item.map((item, index) => (\n                                      <Image className=\"orderPic\" key={index}  src={item.avatarUrl.url} />\n                                    ))\n                                  ) : (\n                                    item.map((item, index) => (\n                                      <View key={index}>\n                                        <Image className=\"orderPic\" key={index}  src={item.avatarUrl.sub} />\n                                        <Image src=\"https://static.gumingnc.com/guming-wechat/prod/files/images/ellipsis.png\" className=\"ellipsis\"></Image>\n                                      </View>\n                                    ))\n                                  )\n                                }\n                            </View>\n                            <View className=\"sum\">\n                              <View className=\"price\">￥{item.sumPrice}</View>\n                              <View className=\"num\">共{item.orderNum}杯</View>\n                            </View>\n                        </View>\n                        <View className=\"order_ft\">\n                          <button className=\"again\" onClick={orderAgain}>再来一单</button>\n                        </View>\n                      </View>\n                        ))\n                      }\n                    </View>\n                  </View>\n                </View>\n              )\n            }\n            </ScrollView>\n          </SwiperItem>\n        </Swiper>\n      </View>\n    </View>\n  );\n}\n\nexport default Order;\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"订单\",\"enablePullDownRefresh\":true,\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/order/index', {}, config || {}))\n\n"],"sourceRoot":""}