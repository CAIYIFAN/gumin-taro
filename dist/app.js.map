{"version":3,"sources":["webpack:///./src/app.tsx","webpack:///./src/app.less","webpack:///./src/app.tsx?a8f4","webpack:///./src/store/counter.ts"],"names":["store","counterStore","props","observable","counter","increment","decrement","incrementAsync","setTimeout"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA,IAAMA,KAAK,GAAG;AACZC,cAAY,EAAZA,8DAAYA;AADA,CAAd;;AAIA,oBAAqB;AACnB,sBACE;AAAU,SAAK,EAAED;AAAjB,KACGE,KAAK,CAFV,QACE,CADF;AAKD;;AAED,8D;;;;;;;;;;;ACnBA,uC;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACoD;;AAE9E;AACE;;AAEhC,cAAc,wCAAwC;AACtD,sDAAM;AACN,eAAe,sEAAc,CAAC,+HAAS,EAAE,kCAAK,EAAE,yDAAQ;;;;;;;;;;;;;;;ACRxD;AAAA;AAEA,IAAMD,YAAY,GAAGE,+DAAU,CAAC;AAC9BC,SAAO,EAAE,CADqB;AAE9BH,cAF8B,0BAEf;AACb,SAAKG,OAAL;AACD,GAJ6B;AAK9BC,WAL8B,uBAKlB;AACV,SAAKD,OAAL;AACD,GAP6B;AAQ9BE,WAR8B,uBAQlB;AACV,SAAKF,OAAL;AACD,GAV6B;AAW9BG,gBAX8B,4BAWb;AAAA;;AACfC,cAAU,CAAC,YAAM;AACf,WAAI,CAACJ,OAAL;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;AAf6B,CAAD,CAA/B;AAkBeH,qEAAf,E","file":"app.js","sourcesContent":["import React from \"react\";\nimport { Provider } from \"mobx-react\";\n\nimport counterStore from \"./store/counter\";\n\nimport \"./app.less\";\n\nconst store = {\n  counterStore,\n};\n\nfunction App (props) {\n  return (\n    <Provider store={store}>\n      {props.children}\n    </Provider>\n  )\n}\n\nexport default App;\n","// extracted by mini-css-extract-plugin","import { createReactApp, window } from '@tarojs/runtime'\nimport component from \"../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./app.tsx\"\n\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nvar config = {\"pages\":[\"pages/index/index\"],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarBackgroundColor\":\"#fff\",\"navigationBarTitleText\":\"WeChat\",\"navigationBarTextStyle\":\"black\"}};\nwindow.__taroAppConfig = config\nvar inst = App(createReactApp(component, React, ReactDOM, config))\n\n","import { observable } from 'mobx'\n\nconst counterStore = observable({\n  counter: 0,\n  counterStore() {\n    this.counter++\n  },\n  increment() {\n    this.counter++\n  },\n  decrement() {\n    this.counter--\n  },\n  incrementAsync() {\n    setTimeout(() => {\n      this.counter++\n    }, 1000)\n  }\n})\n\nexport default counterStore"],"sourceRoot":""}